pipeline {
    agent any

    environment {
        DOCKER_CREDENTIALS_ID = '9256c4ce-3fac-44a8-9405-6b7f5b6c562e'  
    }

    stages {
        stage('Clone Repository') {
            steps {
                git branch: 'master', url: 'https://github.com/RoshanAlii/netCentricProject-master/tree/main/netCentricProject-master'
            }
        }

        stage('Build Docker Images') {
            steps {
                bat 'docker-compose build'
            }
        }

        stage('Test Backend') {
            steps {
                bat 'docker-compose run backend npm test'
            }
        }

        stage('Push to Docker Hub') {
            steps {
                withCredentials([usernamePassword(credentialsId: DOCKER_CREDENTIALS_ID, 
                                                  usernameVariable: 'DOCKER_USER', 
                                                  passwordVariable: 'DOCKER_PASS')]) {
                    script {
                        
                        echo "Docker username: %DOCKER_USER%" 

                        
                        if (!DOCKER_PASS) {
                            error "Password variable is empty. Check Jenkins credentials."
                        }

                     
                        bat """
                            echo DOCKER_PASS | docker login -u %DOCKER_USER% --password-stdin
                            if %ERRORLEVEL% NEQ 0 (
                                echo Docker login failed! Error code: %ERRORLEVEL%
                                exit /b %ERRORLEVEL%
                            )
                        """
                        
                       
                        bat 'docker-compose push'
                    }
                }
            }
        }

        stage('Deploy') {
            steps {
                bat 'docker-compose up -d'
            }
        }
    }

    post {
        always {
            echo 'Cleaning up and finishing the pipeline.'
        }
        success {
            echo 'Pipeline completed successfully!'
        }
        failure {
            echo 'Pipeline failed. Please check the logs.'
        }
    }
}